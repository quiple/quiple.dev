---
// @ts-ignore
import io from 'socket.io-client'
import Footer from '@/components/Footer.astro'
import Header from '@/components/Header.astro'
import Layout from '@/layouts/Layout.astro'
import {
  type ChzzkSessionChat,
  type ChzzkSessionSystem,
  checkSignedIn,
  createSession,
  getSession,
  subscribeChat,
  subscribeDonation,
} from '@/lib/chzzk'

const isSignedIn = await checkSignedIn(Astro.cookies, Astro.locals)

if (!isSignedIn) {
  return Astro.redirect('/chzzk')
}

const accessToken = Astro.cookies.get('accessToken')?.value
const sessionCreate = await createSession(accessToken)

if (sessionCreate.code !== 200) {
  console.log('세션 생성 실패:', sessionCreate.message)
  return Astro.redirect('/chzzk')
}

console.log('Create Session:', sessionCreate)

const session = await getSession(accessToken)
console.log('Session List:', session.content.data)

const sessionKey = session.content.data[0].sessionKey
const chat = subscribeChat(accessToken, sessionKey)
const donation = subscribeDonation(accessToken, sessionKey)

const socket = io(sessionCreate.content.url, {
  reconnection: false,
  forceNew: true,
  timeout: 3000,
  transports: ['websocket'],
})
socket.on('SYSTEM', (message: ChzzkSessionSystem) => console.log('시스템:', message))
socket.on('CHAT', (message: ChzzkSessionChat) => console.log('채팅:', message))
socket.on('DONATION', (message: ChzzkSessionChat) => console.log('후원:', message))
socket.on('connect', () => console.log('연결됨'))
socket.on('disconnect', (reason: string) => console.log('연결 끊김:', reason))
socket.on('connect_error', (error: string) => console.log('연결 오류:', error))
---

<Layout>
  <Header />
    <main>
      안녕하세요.
    </main>
  <Footer />
</Layout>

<style lang="sass">
  @reference '@/styles/global.css'

  main
    @apply mx-auto px-16 pt-8 container flex items-center justify-center
</style>

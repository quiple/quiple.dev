---
import {getCollection, getEntry} from 'astro:content'
import Footer from '@/components/Footer.astro'
import Header from '@/components/Header.astro'
import {buttonVariants} from '@/components/ui/button'
import Layout from '@/layouts/Layout.astro'

const {id} = Astro.params
if (id === undefined) return Astro.redirect('/404')
if (/[A-Z]+/.test(id)) return Astro.redirect(`/unicode/block/${id.toLowerCase()}`)
const block = await getEntry('unicodeBlocks', id.toUpperCase())
if (block === undefined) return Astro.redirect('/404')

const blockData = await getCollection('unicodeData', ({data}) => {
  return (
    parseInt(data.id, 16) >= parseInt(block.id, 16) &&
    parseInt(data.id, 16) <= parseInt(block.data.last, 16)
  )
})
---

<Layout title={`유니코드 블록 “${block.data.nameKo}”`}>
  <Header />
  <main class="container-x py-4">
    <section>
      범위: {block.id}~{block.data.last}<br />
      이름: {block.data.nameKo}<br />
      이름: {block.data.name}
    </section>
    <section class="block-grid">
      <div class="grid grid-cols-16 gap-2">
        {Array(16).fill(0).map((v, i) => <div>{i.toString(16).toUpperCase()}</div>)}
      </div>
      <div class="flex">
        <div class="grid grid-rows-16 gap-2">
        </div>
        <div class="grid grid-cols-16 gap-2">
          {Array(parseInt(blockData[0].id, 16) - parseInt(block.id, 16)).fill(0).map(() => <div />)}
          {blockData.map((item) => {
            return (
              <a class={`${buttonVariants({variant: 'secondary', size: 'lg'})} item`} href={`/unicode/${item.id}`}>
                {String.fromCodePoint(parseInt(item.id, 16))}
              </a>
            )
          })}
        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<style lang="sass" is:global>
  @reference '@/styles/global.css'

  .item
    @apply text-lg
</style>

---
import {between, count} from 'drizzle-orm'
import {drizzle} from 'drizzle-orm/neon-http'
import Footer from '@/components/Footer.astro'
import Header from '@/components/Header.astro'
import {Paginate} from '@/components/pagination'
import {BlocksTable} from '@/components/unicode/blocks'
import {unicodeBlocks, unicodeData} from '@/db/schema'
import Layout from '@/layouts/Layout.astro'

const {page} = Astro.params
const pageSize = 25
const {env} = Astro.locals.runtime
const db = drizzle(env.DATABASE_URL)

const pageNumber = page ? Number(page) : 1
if (page && Number.isNaN(pageNumber)) return Astro.redirect('/404')

const totalBlockCount = (await db.select({count: count()}).from(unicodeBlocks))[0].count
const totalPages = Math.ceil(totalBlockCount / pageSize)

const fetchUnicodeBlocks = async (pageNumber = 1, pageSize = 15) => {
  return await db
    .select()
    .from(unicodeBlocks)
    .limit(pageSize)
    .offset((pageNumber - 1) * pageSize)
}
const unicodeBlocksPage = await fetchUnicodeBlocks(pageNumber, pageSize)
if (unicodeBlocksPage.length === 0) return Astro.redirect('/404')
const unicodeBlockData = await db
  .select({code: unicodeData.code})
  .from(unicodeData)
  .where(
    between(
      unicodeData.code,
      unicodeBlocksPage[0].first,
      unicodeBlocksPage[unicodeBlocksPage.length - 1].last,
    ),
  )
---

<Layout title="유니코드 블록">
  <Header />
  <main class="container-x py-4">
    <BlocksTable client:load blocks={unicodeBlocksPage} data={unicodeBlockData} />
    <Paginate currentPage={pageNumber} totalPages={totalPages} url="/unicode/blocks" />
  </main>
  <Footer />
</Layout>
